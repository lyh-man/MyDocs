<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.lyh</groupId>
	<artifactId>code-in-docs</artifactId>
	<packaging>jar</packaging>
	<version>1.0.0</version>
	<name>code-in-docs</name>
    <description>code in docs</description>

	<dependencies>
	  <dependency>
	    <groupId>junit</groupId>
	    <artifactId>junit</artifactId>
	    <version>3.8.1</version>
	    <scope>test</scope>
	  </dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<!-- 对要打的jar包进行配置 -->
				<configuration>
					<archive>
						<!--生成的jar中，不要包含pom.xml和pom.properties这两个文件-->
						<addMavenDescriptor>false</addMavenDescriptor>

						<!-- Manifest specific configuration -->
						<manifest>
							<!--是否要把第三方jar放到manifest的classpath中-->
							<addClasspath>true</addClasspath>

							<!--生成的manifest中classpath的前缀，
                            因为要把第三方jar放到lib目录下，
                            所以classpath的前缀是lib/-->
							<classpathPrefix>lib/</classpathPrefix>
						</manifest>
					</archive>
					<!--过滤掉不希望包含在jar中的文件-->
					<excludes>
						<!-- 排除不需要的文件夹(路径是jar包内部的路径) -->
						<exclude>**/assembly/</exclude>
					</excludes>
				</configuration>
			</plugin>

			<plugin>  <!--在打包阶段将依赖的jar包导出到lib目录下-->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<type>jar</type>
							<includeTypes>jar</includeTypes>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>